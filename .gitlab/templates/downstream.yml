spec:
  inputs:
    pipeline-name:
      type: string
    pipeline-image:
      type: string
    cargo-args:
      type: string
      default: ''

---

stages:
  - build
  - check

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'parent_pipeline'

build:
  stage: build
  image: $[[ inputs.pipeline-image ]]
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - time cargo build --examples --tests --release $[[ inputs.cargo-args ]]
  artifacts:
    paths:
      - target/
      - urcu-src/vendor/

build:coverage:
  stage: build
  image: $[[ inputs.pipeline-image ]]
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - time cargo llvm-cov nextest-archive --archive-file target/tests.tar.zst --release $[[ inputs.cargo-args ]]
  artifacts:
    paths:
      - target/
      - urcu-src/vendor/

lint:
  needs: []
  stage: check
  image: $[[ inputs.pipeline-image ]]
  script:
    - time cargo clippy --examples --tests --release $[[ inputs.cargo-args ]]

test:ui:
  needs:
    - build
  stage: check
  image: $[[ inputs.pipeline-image ]]
  script:
    - time cargo nextest run --release --profile=ci-no-coverage $[[ inputs.cargo-args ]]
  artifacts:
    paths:
      - target/nextest/ci-no-coverage/junit.xml
    reports:
      junit: target/nextest/ci-no-coverage/junit.xml

test:coverage:
  needs:
    - build:coverage
  stage: check
  image: $[[ inputs.pipeline-image ]]
  script:
    - time cargo llvm-cov nextest --profile=ci --no-report --archive-file target/tests.tar.zst
  artifacts:
    paths:
      - target/nextest/ci/junit.xml
      - target/llvm-cov-target/
    reports:
      junit: target/nextest/ci/junit.xml