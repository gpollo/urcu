stages:
  - tool
  - build
  - check
  - release

include:
  #####################
  # docker image jobs #
  #####################
  - local: '/.gitlab/templates/build-image.yml'
    inputs:
      job-name: image:rust
      image-name: rust
  - local: '/.gitlab/templates/build-image.yml'
    inputs:
      job-name: image:urcu-shared
      job-needs: [image:rust]
      image-name: urcu-shared
  - local: '/.gitlab/templates/build-image.yml'
    inputs:
      job-name: image:urcu-static
      job-needs: [image:rust]
      image-name: urcu-static

##############
# build jobs #
##############

build:urcu-static:
  needs: [image:urcu-static]
  stage: build
  image: ${CI_REGISTRY_IMAGE}/urcu-static:0.1.0-${CI_COMMIT_SHORT_SHA}
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - time cargo build --release --examples --tests --features static
  artifacts:
    paths:
      - target/

build:urcu-shared:
  needs: [image:urcu-shared]
  stage: build
  image: ${CI_REGISTRY_IMAGE}/urcu-shared:0.1.0-${CI_COMMIT_SHORT_SHA}
  script:
    - time cargo build --release --examples --tests
  artifacts:
    paths:
      - target/

doc:urcu-static:
  needs: [image:rust]
  stage: build
  image: ${CI_REGISTRY_IMAGE}/rust:0.1.0-${CI_COMMIT_SHORT_SHA}
  variables:
    DOCS_RS:
    RUSTDOCFLAGS: -D warnings
  script:
    - time cargo doc --features static
  artifacts:
    paths:
      - target/doc/

##############
# check jobs #
##############

audit:
  needs: [image:rust]
  stage: check
  image: ${CI_REGISTRY_IMAGE}/rust:0.1.0-${CI_COMMIT_SHORT_SHA}
  script:
    - time cargo audit

format:
  needs: [image:rust]
  stage: check
  image: ${CI_REGISTRY_IMAGE}/rust:0.1.0-${CI_COMMIT_SHORT_SHA}
  script:
    - time cargo fmt --check

lint:urcu-static:
  needs: [build:urcu-static]
  stage: check
  image: ${CI_REGISTRY_IMAGE}/urcu-static:0.1.0-${CI_COMMIT_SHORT_SHA}
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - time cargo clippy --release --features static

lint:urcu-shared:
  needs: [build:urcu-shared]
  stage: check
  image: ${CI_REGISTRY_IMAGE}/urcu-shared:0.1.0-${CI_COMMIT_SHORT_SHA}
  script:
    - time cargo clippy --release

test:urcu-static:
  needs: [build:urcu-static]
  stage: check
  image: ${CI_REGISTRY_IMAGE}/urcu-static:0.1.0-${CI_COMMIT_SHORT_SHA}
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - time cargo nextest run --release --profile=ci --features static
  artifacts:
    paths:
      - target/nextest/ci/junit.xml
    reports:
      junit: target/nextest/ci/junit.xml

test:urcu-shared:
  needs: [build:urcu-shared]
  stage: check
  image: ${CI_REGISTRY_IMAGE}/urcu-shared:0.1.0-${CI_COMMIT_SHORT_SHA}
  script:
    - time cargo nextest run --release --profile=ci
  artifacts:
    paths:
      - target/nextest/ci/junit.xml
    reports:
      junit: target/nextest/ci/junit.xml

################
# release jobs #
################

cargo:
  dependencies: []
  stage: release
  image: ${CI_REGISTRY_IMAGE}/urcu-shared:0.1.0-${CI_COMMIT_SHORT_SHA}
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: $CI_COMMIT_BRANCH == "master"
      when: manual
  manual_confirmation: 'Are you sure you want to publish to crates.io?'
  script:
    - ./.gitlab/publish-crates.sh

gitlab:
  dependencies: []
  stage: release
  image: ${CI_REGISTRY_IMAGE}/rust:0.1.0-${CI_COMMIT_SHORT_SHA}
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: $CI_COMMIT_BRANCH == "master"
      when: manual
  manual_confirmation: 'Are you sure you want to create a Gitlab release?'
  script:
    - ./.gitlab/release-gitlab.sh
